#!/usr/bin/env python3
"""Convert a markdown file to Beamer & typeset it"""

import argparse
import pathlib
import shlex
import subprocess


def typeset(path: pathlib.Path, dark: bool) -> None:
    """Convert a markdown file to Beamer & typeset it"""
    template = "beamer_dark_template.tex" if dark else "beamer_template.tex"
    output = path.with_suffix(".pdf")
    subprocess.call(
        shlex.split(f"pandoc -t beamer+smart --pdf-engine=xelatex --template={template} --listings {path} -o {output}")
    )


if __name__ == "__main__":
    PARSER = argparse.ArgumentParser(description=__doc__)
    PARSER.add_argument("input", help="Markdown file to convert & typeset")
    PARSER.add_argument("-d", "--dark", help="Use dark template", action="store_true", required=False)
    ARGS = PARSER.parse_args()
    typeset(pathlib.Path(ARGS.input), ARGS.dark)
