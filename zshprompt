# modified from https://github.com/tylerreckart/hyperzsh & oh-my-zsh awesomepanda
#
. $HOME/github/dotfiles/spectrum.zsh

PROMPT='$(dir) $(glyph) '
RPROMPT='$(return_status)$(git_branch_info)$(git_status)'

function glyph() {
  echo "%{$fg[green]%}𝔼%{$reset_color%}"
}

function dir() {
  echo "%{$fg[cyan]%}%~ %{$reset_color%}"
}

function return_status() {
  echo "%{$fg[red]%}%(?..⍉ )%{$reset_color%}"
}

function git_branch_info() {
  local prefix="%{$fg[cyan]%}git:(%{$fg[red]%}"
  local suffix="%{$fg[cyan]%})%{$reset_color%}"
  local ref
  ref=$(command git symbolic-ref HEAD 2> /dev/null) || \
    ref=$(command git rev-parse --short HEAD 2> /dev/null) || return 0
  echo "$prefix${ref#refs/heads/}$suffix"
}

function git_status() {
  local INDEX STATUS
  local UNTRACKED="%{$fg[white]%}◒ "
  local ADDED="%{$fg[green]%}✓"
  local MODIFIED="%{$fg[yellow]%}△"
  local DELETED="%{$fg[red]%}⊗"
  local RENAMED="%{$fg[blue]%}⋙"
  local UNMERGED="%{$fg[cyan]%}§"
  INDEX=$(command git status --porcelain --ignore-submodules=dirty 2> /dev/null | tail -n1)
  STATUS=""
  case ${INDEX[1,2]} in
    '??')
      STATUS="$UNTRACKED$STATUS"
      ;;
    'A ')
      STATUS="$ADDED$STATUS"
      ;;
    'M ')
      STATUS="$ADDED$STATUS"
      ;;
    ' M')
      STATUS="$MODIFIED$STATUS"
      ;;
    'MM')
      STATUS="$MODIFIED$STATUS"
      ;;
    'AM')
      STATUS="$MODIFIED$STATUS"
      ;;
    ' T')
      STATUS="$MODIFIED$STATUS"
      ;;
    'R ')
      STATUS="$RENAMED$STATUS"
      ;;
    ' D')
      STATUS="$DELETED$STATUS"
      ;;
    'D ')
      STATUS="$DELETED$STATUS"
      ;;
    'AD')
      STATUS="$DELETED$STATUS"
      ;;
    'UU')
      STATUS="$UNMERGED$STATUS"
      ;;
  esac
  echo "$STATUS %{$reset_color%}"
}
